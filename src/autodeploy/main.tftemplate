# Provider Configuration
provider "google" {
  project = "${PROJECT_ID}" # Use the environment variable
  region  = "us-central1"
}

# Network Resources
resource "google_compute_network" "vpc_network" {
  name                    = "${NAME}-network"
  auto_create_subnetworks = false
  mtu                     = 1460
}

resource "google_compute_subnetwork" "default" {
  name          = "${NAME}-subnet"
  ip_cidr_range = "10.0.1.0/24"
  region        = "us-central1"  # Consistent with provider region
  network       = google_compute_network.vpc_network.id
}

# Compute Engine Instance
resource "google_compute_instance" "default" {
  name         = "${NAME}-vm"
  machine_type = "e2-micro"
  zone         = "us-central1-a"  # Zone within the region
  tags         = ["ssh"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
    }
  }

  # Install Docker
  metadata_startup_script = <<-EOT
      # Add Docker's official GPG key:
    sudo apt-get update
    sudo apt-get install ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    echo \
      "deb [arch=$$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $$(. /etc/os-release && echo "$$VERSION_CODENAME") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    sudo usermod -aG docker $$USER
  EOT

  network_interface {
    subnetwork = google_compute_subnetwork.default.id
    access_config {}  # Creates an external IP
  }
}

# Firewall Rules
resource "google_compute_firewall" "ssh" {
  name          = "allow-ssh"
  network       = google_compute_network.vpc_network.id
  direction     = "INGRESS"
  priority      = 1000
  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["ssh"]
  allow {
    protocol = "tcp"
    ports    = ["22"]
  }
}

resource "google_compute_firewall" "${NAME}" {
  name          = "${NAME}-app-firewall"
  network       = google_compute_network.vpc_network.id
  source_ranges = ["0.0.0.0/0"]
  allow {
    protocol = "tcp"
    ports    = ["${PORT}", 80, 443]
  }
}

# Output
output "Web-server-URL" {
  value = join("", ["http://", google_compute_instance.default.network_interface.0.access_config.0.nat_ip, ":${PORT}"])
}
